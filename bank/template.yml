AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 30
    MemorySize: 1024
    Runtime: java11
    AutoPublishAlias: production
    SnapStart:
      ApplyOn: PublishedVersions
    Architectures:
      - x86_64
    Environment:
      Variables:
        POWERTOOLS_SERVICE_NAME: BankApi
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1 # More info about tiered compilation https://aws.amazon.com/blogs/compute/optimizing-aws-lambda-function-performance-for-java/
        QUEUE_ARN_LOAN_ACCRUAL_EXTRACTION: !Ref LoanAccrualExtraction
        QUEUE_ARN_LOAN_ACCRUAL: !Ref LoanAccrualQueue
        QUEUE_ARN_LOAN_DAILY_BATCH_JOB: !Ref LoanDailyBatchJob

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Auth:
        ApiKeyRequired: true  # for all methods
        UsagePlan:
          CreateUsagePlan: PER_API
          Description: Usage plan for this API

  ApiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: .
      Handler: com.lucas.bank.StreamLambdaHandler::handleRequest
      Policies:
        # Read more about SAM policy templates here
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute
        - DynamoDBCrudPolicy:
            TableName: !Ref BankDynamoDbTable
        - DynamoDBCrudPolicy:
            TableName: !Ref BankConfigurationTable
        - DynamoDBCrudPolicy:
            TableName: !Ref BankLockDynamoDbTable
      Events:
        ApiGateway:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId:
              Ref: ApiGatewayApi

  LoanDailySchedule:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: .
      Handler: com.lucas.bank.StreamLambdaHandler::handleRequest
      Policies:
        # Read more about SAM policy templates here
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute
        - DynamoDBCrudPolicy:
            TableName: !Ref BankDynamoDbTable
        - DynamoDBCrudPolicy:
            TableName: !Ref BankConfigurationTable
        - DynamoDBCrudPolicy:
            TableName: !Ref BankLockDynamoDbTable
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt LoanDailyBatchJob.QueueName
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt LoanAccrualExtraction.QueueName
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt LoanAccrualQueue.QueueName
      Events:
        DailyBatchJob:
          Type: Schedule
          Properties:
            Schedule: 'cron(1 0 * * ? *)'
            Name: DailySchedule
            Enabled: true

  BatchFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: .
      Handler: com.lucas.bank.StreamLambdaHandler::handleRequest
      Policies:
        # Read more about SAM policy templates here
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute
        - DynamoDBCrudPolicy:
            TableName: !Ref BankDynamoDbTable
        - DynamoDBCrudPolicy:
            TableName: !Ref BankConfigurationTable
        - DynamoDBCrudPolicy:
            TableName: !Ref BankLockDynamoDbTable
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt LoanDailyBatchJob.QueueName
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt LoanAccrualExtraction.QueueName
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt LoanAccrualQueue.QueueName
      Events:
        LoanDailyBatchJob:
          Type: SQS
          Properties:
            Queue: !GetAtt LoanDailyBatchJob.Arn

  ExtractionFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: .
      Handler: com.lucas.bank.StreamLambdaHandler::handleRequest
      Policies:
        # Read more about SAM policy templates here
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute
        - DynamoDBCrudPolicy:
            TableName: !Ref BankDynamoDbTable
        - DynamoDBCrudPolicy:
            TableName: !Ref BankConfigurationTable
        - DynamoDBCrudPolicy:
            TableName: !Ref BankLockDynamoDbTable
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt LoanDailyBatchJob.QueueName
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt LoanAccrualExtraction.QueueName
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt LoanAccrualQueue.QueueName
      Events:
        LoanAccrualBatchExtractionTrigger:
          Type: SQS
          Properties:
            Queue: !GetAtt LoanAccrualExtraction.Arn

  LoanAccrualFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: .
      Handler: com.lucas.bank.StreamLambdaHandler::handleRequest
      Policies:
        # Read more about SAM policy templates here
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - AWSLambdaExecute
        - DynamoDBCrudPolicy:
            TableName: !Ref BankDynamoDbTable
        - DynamoDBCrudPolicy:
            TableName: !Ref BankConfigurationTable
        - DynamoDBCrudPolicy:
            TableName: !Ref BankLockDynamoDbTable
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt LoanDailyBatchJob.QueueName
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt LoanAccrualExtraction.QueueName
        - SQSSendMessagePolicy:
            QueueName:
              !GetAtt LoanAccrualQueue.QueueName
      Events:
        LoanAccrualTrigger:
          Type: SQS
          Properties:
            Queue: !GetAtt LoanAccrualQueue.Arn

  LoanDailyBatchJob:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: 'loan-daily-batch-job-queue'

  LoanAccrualExtraction:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: 'loan-accrual-extraction-queue'

  LoanAccrualQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: 'loan-accrual-queue'

  BankDynamoDbTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: bank
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: loanState
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: loan-state-gsi
          KeySchema:
            - AttributeName: loanState
              KeyType: HASH
          Projection:
            NonKeyAttributes:
              - lastAccrualDate
              - batchBlock
              - loanId
            ProjectionType: INCLUDE

  BankLockDynamoDbTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: bank-lock
      AttributeDefinitions:
        - AttributeName: key
          AttributeType: S
      KeySchema:
        - AttributeName: key
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  BankConfigurationTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: bank-configuration
      AttributeDefinitions:
        - AttributeName: key
          AttributeType: S
        - AttributeName: type
          AttributeType: S
      KeySchema:
        - AttributeName: key
          KeyType: HASH
        - AttributeName: type
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST